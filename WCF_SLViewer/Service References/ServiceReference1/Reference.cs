//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace WCF_SLViewer.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IViewerService")]
    public interface IViewerService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IViewerService/LoadReport", ReplyAction="http://tempuri.org/IViewerService/LoadReportResponse")]
        System.IAsyncResult BeginLoadReport(string reportName, System.AsyncCallback callback, object asyncState);
        
        string EndLoadReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IViewerService/RenderingInteractions", ReplyAction="http://tempuri.org/IViewerService/RenderingInteractionsResponse")]
        System.IAsyncResult BeginRenderingInteractions(string xml, System.AsyncCallback callback, object asyncState);
        
        string EndRenderingInteractions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IViewerService/RequestFromUserRenderReport", ReplyAction="http://tempuri.org/IViewerService/RequestFromUserRenderReportResponse")]
        System.IAsyncResult BeginRequestFromUserRenderReport(string xml, System.AsyncCallback callback, object asyncState);
        
        string EndRequestFromUserRenderReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IViewerService/ExportDocument", ReplyAction="http://tempuri.org/IViewerService/ExportDocumentResponse")]
        System.IAsyncResult BeginExportDocument(string xml, System.AsyncCallback callback, object asyncState);
        
        byte[] EndExportDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IViewerService/PrepareRequestFromUserVariables", ReplyAction="http://tempuri.org/IViewerService/PrepareRequestFromUserVariablesResponse")]
        System.IAsyncResult BeginPrepareRequestFromUserVariables(string xml, System.AsyncCallback callback, object asyncState);
        
        string EndPrepareRequestFromUserVariables(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IViewerService/InteractiveDataBandSelection", ReplyAction="http://tempuri.org/IViewerService/InteractiveDataBandSelectionResponse")]
        System.IAsyncResult BeginInteractiveDataBandSelection(string xml, System.AsyncCallback callback, object asyncState);
        
        string EndInteractiveDataBandSelection(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IViewerServiceChannel : WCF_SLViewer.ServiceReference1.IViewerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RenderingInteractionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RenderingInteractionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestFromUserRenderReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RequestFromUserRenderReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExportDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExportDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrepareRequestFromUserVariablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrepareRequestFromUserVariablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InteractiveDataBandSelectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InteractiveDataBandSelectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ViewerServiceClient : System.ServiceModel.ClientBase<WCF_SLViewer.ServiceReference1.IViewerService>, WCF_SLViewer.ServiceReference1.IViewerService {
        
        private BeginOperationDelegate onBeginLoadReportDelegate;
        
        private EndOperationDelegate onEndLoadReportDelegate;
        
        private System.Threading.SendOrPostCallback onLoadReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginRenderingInteractionsDelegate;
        
        private EndOperationDelegate onEndRenderingInteractionsDelegate;
        
        private System.Threading.SendOrPostCallback onRenderingInteractionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRequestFromUserRenderReportDelegate;
        
        private EndOperationDelegate onEndRequestFromUserRenderReportDelegate;
        
        private System.Threading.SendOrPostCallback onRequestFromUserRenderReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginExportDocumentDelegate;
        
        private EndOperationDelegate onEndExportDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onExportDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrepareRequestFromUserVariablesDelegate;
        
        private EndOperationDelegate onEndPrepareRequestFromUserVariablesDelegate;
        
        private System.Threading.SendOrPostCallback onPrepareRequestFromUserVariablesCompletedDelegate;
        
        private BeginOperationDelegate onBeginInteractiveDataBandSelectionDelegate;
        
        private EndOperationDelegate onEndInteractiveDataBandSelectionDelegate;
        
        private System.Threading.SendOrPostCallback onInteractiveDataBandSelectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ViewerServiceClient() {
        }
        
        public ViewerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ViewerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ViewerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ViewerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<LoadReportCompletedEventArgs> LoadReportCompleted;
        
        public event System.EventHandler<RenderingInteractionsCompletedEventArgs> RenderingInteractionsCompleted;
        
        public event System.EventHandler<RequestFromUserRenderReportCompletedEventArgs> RequestFromUserRenderReportCompleted;
        
        public event System.EventHandler<ExportDocumentCompletedEventArgs> ExportDocumentCompleted;
        
        public event System.EventHandler<PrepareRequestFromUserVariablesCompletedEventArgs> PrepareRequestFromUserVariablesCompleted;
        
        public event System.EventHandler<InteractiveDataBandSelectionCompletedEventArgs> InteractiveDataBandSelectionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WCF_SLViewer.ServiceReference1.IViewerService.BeginLoadReport(string reportName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadReport(reportName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WCF_SLViewer.ServiceReference1.IViewerService.EndLoadReport(System.IAsyncResult result) {
            return base.Channel.EndLoadReport(result);
        }
        
        private System.IAsyncResult OnBeginLoadReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string reportName = ((string)(inValues[0]));
            return ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).BeginLoadReport(reportName, callback, asyncState);
        }
        
        private object[] OnEndLoadReport(System.IAsyncResult result) {
            string retVal = ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).EndLoadReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadReportCompleted(object state) {
            if ((this.LoadReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadReportCompleted(this, new LoadReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadReportAsync(string reportName) {
            this.LoadReportAsync(reportName, null);
        }
        
        public void LoadReportAsync(string reportName, object userState) {
            if ((this.onBeginLoadReportDelegate == null)) {
                this.onBeginLoadReportDelegate = new BeginOperationDelegate(this.OnBeginLoadReport);
            }
            if ((this.onEndLoadReportDelegate == null)) {
                this.onEndLoadReportDelegate = new EndOperationDelegate(this.OnEndLoadReport);
            }
            if ((this.onLoadReportCompletedDelegate == null)) {
                this.onLoadReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadReportCompleted);
            }
            base.InvokeAsync(this.onBeginLoadReportDelegate, new object[] {
                        reportName}, this.onEndLoadReportDelegate, this.onLoadReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WCF_SLViewer.ServiceReference1.IViewerService.BeginRenderingInteractions(string xml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRenderingInteractions(xml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WCF_SLViewer.ServiceReference1.IViewerService.EndRenderingInteractions(System.IAsyncResult result) {
            return base.Channel.EndRenderingInteractions(result);
        }
        
        private System.IAsyncResult OnBeginRenderingInteractions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xml = ((string)(inValues[0]));
            return ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).BeginRenderingInteractions(xml, callback, asyncState);
        }
        
        private object[] OnEndRenderingInteractions(System.IAsyncResult result) {
            string retVal = ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).EndRenderingInteractions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRenderingInteractionsCompleted(object state) {
            if ((this.RenderingInteractionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RenderingInteractionsCompleted(this, new RenderingInteractionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RenderingInteractionsAsync(string xml) {
            this.RenderingInteractionsAsync(xml, null);
        }
        
        public void RenderingInteractionsAsync(string xml, object userState) {
            if ((this.onBeginRenderingInteractionsDelegate == null)) {
                this.onBeginRenderingInteractionsDelegate = new BeginOperationDelegate(this.OnBeginRenderingInteractions);
            }
            if ((this.onEndRenderingInteractionsDelegate == null)) {
                this.onEndRenderingInteractionsDelegate = new EndOperationDelegate(this.OnEndRenderingInteractions);
            }
            if ((this.onRenderingInteractionsCompletedDelegate == null)) {
                this.onRenderingInteractionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRenderingInteractionsCompleted);
            }
            base.InvokeAsync(this.onBeginRenderingInteractionsDelegate, new object[] {
                        xml}, this.onEndRenderingInteractionsDelegate, this.onRenderingInteractionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WCF_SLViewer.ServiceReference1.IViewerService.BeginRequestFromUserRenderReport(string xml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRequestFromUserRenderReport(xml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WCF_SLViewer.ServiceReference1.IViewerService.EndRequestFromUserRenderReport(System.IAsyncResult result) {
            return base.Channel.EndRequestFromUserRenderReport(result);
        }
        
        private System.IAsyncResult OnBeginRequestFromUserRenderReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xml = ((string)(inValues[0]));
            return ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).BeginRequestFromUserRenderReport(xml, callback, asyncState);
        }
        
        private object[] OnEndRequestFromUserRenderReport(System.IAsyncResult result) {
            string retVal = ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).EndRequestFromUserRenderReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRequestFromUserRenderReportCompleted(object state) {
            if ((this.RequestFromUserRenderReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RequestFromUserRenderReportCompleted(this, new RequestFromUserRenderReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RequestFromUserRenderReportAsync(string xml) {
            this.RequestFromUserRenderReportAsync(xml, null);
        }
        
        public void RequestFromUserRenderReportAsync(string xml, object userState) {
            if ((this.onBeginRequestFromUserRenderReportDelegate == null)) {
                this.onBeginRequestFromUserRenderReportDelegate = new BeginOperationDelegate(this.OnBeginRequestFromUserRenderReport);
            }
            if ((this.onEndRequestFromUserRenderReportDelegate == null)) {
                this.onEndRequestFromUserRenderReportDelegate = new EndOperationDelegate(this.OnEndRequestFromUserRenderReport);
            }
            if ((this.onRequestFromUserRenderReportCompletedDelegate == null)) {
                this.onRequestFromUserRenderReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRequestFromUserRenderReportCompleted);
            }
            base.InvokeAsync(this.onBeginRequestFromUserRenderReportDelegate, new object[] {
                        xml}, this.onEndRequestFromUserRenderReportDelegate, this.onRequestFromUserRenderReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WCF_SLViewer.ServiceReference1.IViewerService.BeginExportDocument(string xml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExportDocument(xml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] WCF_SLViewer.ServiceReference1.IViewerService.EndExportDocument(System.IAsyncResult result) {
            return base.Channel.EndExportDocument(result);
        }
        
        private System.IAsyncResult OnBeginExportDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xml = ((string)(inValues[0]));
            return ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).BeginExportDocument(xml, callback, asyncState);
        }
        
        private object[] OnEndExportDocument(System.IAsyncResult result) {
            byte[] retVal = ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).EndExportDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExportDocumentCompleted(object state) {
            if ((this.ExportDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExportDocumentCompleted(this, new ExportDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExportDocumentAsync(string xml) {
            this.ExportDocumentAsync(xml, null);
        }
        
        public void ExportDocumentAsync(string xml, object userState) {
            if ((this.onBeginExportDocumentDelegate == null)) {
                this.onBeginExportDocumentDelegate = new BeginOperationDelegate(this.OnBeginExportDocument);
            }
            if ((this.onEndExportDocumentDelegate == null)) {
                this.onEndExportDocumentDelegate = new EndOperationDelegate(this.OnEndExportDocument);
            }
            if ((this.onExportDocumentCompletedDelegate == null)) {
                this.onExportDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExportDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginExportDocumentDelegate, new object[] {
                        xml}, this.onEndExportDocumentDelegate, this.onExportDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WCF_SLViewer.ServiceReference1.IViewerService.BeginPrepareRequestFromUserVariables(string xml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrepareRequestFromUserVariables(xml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WCF_SLViewer.ServiceReference1.IViewerService.EndPrepareRequestFromUserVariables(System.IAsyncResult result) {
            return base.Channel.EndPrepareRequestFromUserVariables(result);
        }
        
        private System.IAsyncResult OnBeginPrepareRequestFromUserVariables(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xml = ((string)(inValues[0]));
            return ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).BeginPrepareRequestFromUserVariables(xml, callback, asyncState);
        }
        
        private object[] OnEndPrepareRequestFromUserVariables(System.IAsyncResult result) {
            string retVal = ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).EndPrepareRequestFromUserVariables(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrepareRequestFromUserVariablesCompleted(object state) {
            if ((this.PrepareRequestFromUserVariablesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrepareRequestFromUserVariablesCompleted(this, new PrepareRequestFromUserVariablesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrepareRequestFromUserVariablesAsync(string xml) {
            this.PrepareRequestFromUserVariablesAsync(xml, null);
        }
        
        public void PrepareRequestFromUserVariablesAsync(string xml, object userState) {
            if ((this.onBeginPrepareRequestFromUserVariablesDelegate == null)) {
                this.onBeginPrepareRequestFromUserVariablesDelegate = new BeginOperationDelegate(this.OnBeginPrepareRequestFromUserVariables);
            }
            if ((this.onEndPrepareRequestFromUserVariablesDelegate == null)) {
                this.onEndPrepareRequestFromUserVariablesDelegate = new EndOperationDelegate(this.OnEndPrepareRequestFromUserVariables);
            }
            if ((this.onPrepareRequestFromUserVariablesCompletedDelegate == null)) {
                this.onPrepareRequestFromUserVariablesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrepareRequestFromUserVariablesCompleted);
            }
            base.InvokeAsync(this.onBeginPrepareRequestFromUserVariablesDelegate, new object[] {
                        xml}, this.onEndPrepareRequestFromUserVariablesDelegate, this.onPrepareRequestFromUserVariablesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WCF_SLViewer.ServiceReference1.IViewerService.BeginInteractiveDataBandSelection(string xml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInteractiveDataBandSelection(xml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WCF_SLViewer.ServiceReference1.IViewerService.EndInteractiveDataBandSelection(System.IAsyncResult result) {
            return base.Channel.EndInteractiveDataBandSelection(result);
        }
        
        private System.IAsyncResult OnBeginInteractiveDataBandSelection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xml = ((string)(inValues[0]));
            return ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).BeginInteractiveDataBandSelection(xml, callback, asyncState);
        }
        
        private object[] OnEndInteractiveDataBandSelection(System.IAsyncResult result) {
            string retVal = ((WCF_SLViewer.ServiceReference1.IViewerService)(this)).EndInteractiveDataBandSelection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInteractiveDataBandSelectionCompleted(object state) {
            if ((this.InteractiveDataBandSelectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InteractiveDataBandSelectionCompleted(this, new InteractiveDataBandSelectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InteractiveDataBandSelectionAsync(string xml) {
            this.InteractiveDataBandSelectionAsync(xml, null);
        }
        
        public void InteractiveDataBandSelectionAsync(string xml, object userState) {
            if ((this.onBeginInteractiveDataBandSelectionDelegate == null)) {
                this.onBeginInteractiveDataBandSelectionDelegate = new BeginOperationDelegate(this.OnBeginInteractiveDataBandSelection);
            }
            if ((this.onEndInteractiveDataBandSelectionDelegate == null)) {
                this.onEndInteractiveDataBandSelectionDelegate = new EndOperationDelegate(this.OnEndInteractiveDataBandSelection);
            }
            if ((this.onInteractiveDataBandSelectionCompletedDelegate == null)) {
                this.onInteractiveDataBandSelectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInteractiveDataBandSelectionCompleted);
            }
            base.InvokeAsync(this.onBeginInteractiveDataBandSelectionDelegate, new object[] {
                        xml}, this.onEndInteractiveDataBandSelectionDelegate, this.onInteractiveDataBandSelectionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WCF_SLViewer.ServiceReference1.IViewerService CreateChannel() {
            return new ViewerServiceClientChannel(this);
        }
        
        private class ViewerServiceClientChannel : ChannelBase<WCF_SLViewer.ServiceReference1.IViewerService>, WCF_SLViewer.ServiceReference1.IViewerService {
            
            public ViewerServiceClientChannel(System.ServiceModel.ClientBase<WCF_SLViewer.ServiceReference1.IViewerService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLoadReport(string reportName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = reportName;
                System.IAsyncResult _result = base.BeginInvoke("LoadReport", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLoadReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("LoadReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRenderingInteractions(string xml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xml;
                System.IAsyncResult _result = base.BeginInvoke("RenderingInteractions", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRenderingInteractions(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RenderingInteractions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRequestFromUserRenderReport(string xml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xml;
                System.IAsyncResult _result = base.BeginInvoke("RequestFromUserRenderReport", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRequestFromUserRenderReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RequestFromUserRenderReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExportDocument(string xml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xml;
                System.IAsyncResult _result = base.BeginInvoke("ExportDocument", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndExportDocument(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("ExportDocument", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPrepareRequestFromUserVariables(string xml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xml;
                System.IAsyncResult _result = base.BeginInvoke("PrepareRequestFromUserVariables", _args, callback, asyncState);
                return _result;
            }
            
            public string EndPrepareRequestFromUserVariables(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("PrepareRequestFromUserVariables", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInteractiveDataBandSelection(string xml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xml;
                System.IAsyncResult _result = base.BeginInvoke("InteractiveDataBandSelection", _args, callback, asyncState);
                return _result;
            }
            
            public string EndInteractiveDataBandSelection(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("InteractiveDataBandSelection", _args, result)));
                return _result;
            }
        }
    }
}
